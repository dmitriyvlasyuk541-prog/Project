import customtkinter as ctk
from tkinter import messagebox
from pathlib import Path
import csv

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
from generator import generate_pairs
from browser import open_in_incognito


# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É, –∫—É–¥–∞ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –¥–∞–Ω–Ω—ã–µ
OUT_FILE = Path(__file__).parent / "human_creds.csv"


# ---------- –§—É–Ω–∫—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è CSV ----------
def save_to_csv(rows):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å –≤ CSV-—Ñ–∞–π–ª."""
    with open(OUT_FILE, "w", newline="", encoding="utf-8") as f:
        writer = csv.writer(f)
        writer.writerow(["Username", "Password", "CreatedUTC"])
        writer.writerows(rows)
    messagebox.showinfo("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {OUT_FILE.name}")


# ---------- –ö–ª–∞—Å—Å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è ----------
class GeneratorApp(ctk.CTk):
    """–ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞ CustomTkinter)."""

    def __init__(self):
        super().__init__()

        # --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–∫–Ω–∞ ---
        self.title("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ª–æ–≥–∏–Ω–æ–≤ –∏ –ø–∞—Ä–æ–ª–µ–π")
        self.geometry("800x600")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–º—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è (—Ç—ë–º–Ω–∞—è + —Å–∏–Ω—è—è —Ü–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞)
        ctk.set_appearance_mode("dark")
        ctk.set_default_color_theme("blue")

        # --- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ ---
        # –û–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≤—è–∑–∞–Ω—ã —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤–≤–æ–¥–∞ (Entry, CheckBox –∏ —Ç.–¥.)
        self.qty_var = ctk.StringVar(value="10")       # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–∏–Ω–æ–≤
        self.len_var = ctk.StringVar(value="14")       # –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
        self.save_var = ctk.BooleanVar(value=True)     # —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–∏ –≤ CSV
        self.symbols_var = ctk.BooleanVar(value=True)  # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ª–∏ —Å–∏–º–≤–æ–ª—ã –≤ –ø–∞—Ä–æ–ª—è—Ö

        # --- –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ---
        frame = ctk.CTkFrame(self)
        frame.pack(pady=15, padx=15, fill="x")

        # –ú–µ—Ç–∫–∏ –∏ –ø–æ–ª—è –≤–≤–æ–¥–∞
        ctk.CTkLabel(frame, text="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–∏–Ω–æ–≤:").grid(row=0, column=0, padx=10, pady=10)
        ctk.CTkEntry(frame, textvariable=self.qty_var, width=70).grid(row=0, column=1, padx=10)

        ctk.CTkLabel(frame, text="–î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è:").grid(row=0, column=2, padx=10)
        ctk.CTkEntry(frame, textvariable=self.len_var, width=70).grid(row=0, column=3, padx=10)

        # –ß–µ–∫–±–æ–∫—Å—ã
        ctk.CTkCheckBox(frame, text="–°–æ—Ö—Ä–∞–Ω—è—Ç—å –≤ CSV", variable=self.save_var).grid(row=1, column=0, padx=10)
        ctk.CTkCheckBox(frame, text="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∏–º–≤–æ–ª—ã", variable=self.symbols_var).grid(row=1, column=1, padx=10)

        # –ö–Ω–æ–ø–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
        ctk.CTkButton(frame, text="üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", command=self.generate).grid(row=1, column=3, padx=10)

        # --- –ü–æ–ª–µ –≤—ã–≤–æ–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ---
        self.textbox = ctk.CTkTextbox(self, width=760, height=400, font=("Consolas", 13))
        self.textbox.pack(padx=10, pady=10)

        # --- –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å —Å –∫–Ω–æ–ø–∫–∞–º–∏ ---
        bottom = ctk.CTkFrame(self)
        bottom.pack(pady=5)

        # –ö–Ω–æ–ø–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
        ctk.CTkButton(bottom, text="üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤—Å—ë", command=self.copy_all).grid(row=0, column=0, padx=10)

        # –ö–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ –≤ –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ
        ctk.CTkButton(bottom, text="üåê –û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç –≤ –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ", command=self.open_preview).grid(row=0, column=1, padx=10)

        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        ctk.CTkButton(bottom, text="–í—ã—Ö–æ–¥", command=self.destroy).grid(row=0, column=2, padx=10)

    # ---------- –ú–µ—Ç–æ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ----------
    def generate(self):
        """–°–æ–∑–¥–∞—ë—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–∏–Ω–æ–≤ –∏ –ø–∞—Ä–æ–ª–µ–π."""
        self.textbox.delete("0.0", "end")  # –æ—á–∏—â–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ

        try:
            qty = int(self.qty_var.get())      # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–æ–≥–∏–Ω–æ–≤
            length = int(self.len_var.get())   # –¥–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è
        except ValueError:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —á–∏—Å–ª–∞.")
            return

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–∞—Ä –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å —á–µ—Ä–µ–∑ –º–æ–¥—É–ª—å generator.py
        pairs = generate_pairs(qty, length, self.symbols_var.get())

        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –æ–∫–Ω–æ
        for username, password, _ in pairs:
            self.textbox.insert("end", f"{username} : {password}\n")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if self.save_var.get():
            save_to_csv(pairs)

    # ---------- –ú–µ—Ç–æ–¥ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è ----------
    def copy_all(self):
        """–ö–æ–ø–∏—Ä—É–µ—Ç –≤—Å—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–ª—è –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞."""
        text = self.textbox.get("0.0", "end").strip()
        if not text:
            messagebox.showinfo("–ò–Ω—Ñ–æ", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è.")
            return

        self.clipboard_clear()
        self.clipboard_append(text)
        messagebox.showinfo("‚úÖ", "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.")

    # ---------- –ú–µ—Ç–æ–¥ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞ ----------

    def open_preview(self):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ä–∞–∑—É –¥–≤–µ –≤–∫–ª–∞–¥–∫–∏ (Outlook + Steam) –≤ –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ."""
        urls = [
            "https://login.live.com",
            "https://store.steampowered.com/"
        ]
        try:
            open_in_incognito(urls)  # ‚Üê –±–µ–∑ browser=
            messagebox.showinfo("–ó–∞–ø—É—Å–∫", "üåê –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç –≤ –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ.\n–í–∫–ª–∞–¥–∫–∏: Outlook + Steam")
        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", str(e))
